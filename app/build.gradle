/*
 * Copyright (c) 2019 Gabriel Dogaru - gdogaru@gmail.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

plugins {
    id 'com.android.application'
    id 'io.fabric'
    id 'com.google.firebase.firebase-perf'

    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
    id 'androidx.navigation.safeargs.kotlin'

    id 'jacoco'

    id 'com.github.triplet.play' version "2.3.0"
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        applicationId "com.gdogaru.codecamp"
        versionCode 29
        versionName "4.8"
        multiDexEnabled true

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        upload {
            storeFile file('../certificate/dummy.jks')
            storePassword "codecamp"
            keyAlias "dummy"
            keyPassword "codecamp"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.upload
            minifyEnabled false
            shrinkResources false
            debuggable true
            ext.alwaysUpdateBuildId = false

        }

        release {
            signingConfig signingConfigs.upload
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "stage"
    productFlavors {
        dev {
            dimension "stage"
            signingConfig signingConfigs.upload
            minSdkVersion 24
            applicationIdSuffix '.dev'
            versionNameSuffix "-dev"

            resConfigs "en", "xxhdpi"

            resValue "string", "app_name", "Codecamp-DEV"
        }
        prod {
            signingConfig signingConfigs.upload
            dimension "stage"
            resValue "string", "app_name", "Codecamp"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude '.readme'
    }

    lintOptions {
        abortOnError false
        warning 'MissingPrefix'
        warning 'InvalidPackage'
        warning 'RestrictedApi'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

android.applicationVariants.all {
    // Set this to false to disable Firebase Performance Monitoring at compile time
    FirebasePerformance {
        instrumentationEnabled true
    }
}

jacoco {
    toolVersion = "0.7.4+"
}

play {
    track = 'beta' // or internal or alpha...
    serviceAccountCredentials = file(System.getenv('PRIVATE_KEY') ?: '../certificate/private-key.json')
    defaultToAppBundles = true // Use App Bundle instead of APK
    resolutionStrategy = "ignore"
    //If the deployment fails due to an API error, don't fail the CI Build
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.core:core-ktx:$versions.ktx"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "android.arch.persistence.room:runtime:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"
    implementation "android.arch.work:work-runtime:1.0.1"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"

    implementation "com.google.firebase:firebase-perf:18.0.1"
    implementation "com.google.firebase:firebase-core:17.0.1"
    implementation "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"

    implementation "com.google.android.gms:play-services-maps:$versions.gmsVersion"
    implementation "com.google.android.gms:play-services-base:$versions.gmsVersion"
    implementation "com.google.android.gms:play-services-gcm:$versions.gmsVersion"

    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    //todo should be fixed by dagger in a future version

    implementation "com.jakewharton.timber:timber:4.7.1"

    implementation "com.squareup.okio:okio:1.17.2"
    implementation "com.squareup.okhttp3:okhttp:3.14.1"

    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.0'

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    implementation "se.emilsjolander:stickylistheaders:2.7.0"

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'

    implementation 'com.evernote:android-state:1.4.1'
    kapt 'com.evernote:android-state-processor:1.4.1'


    testImplementation "androidx.test.ext:junit:1.1.1"
    testImplementation "org.mockito:mockito-core:2.25.0"
    testImplementation "junit:junit:4.12"
    testImplementation "androidx.navigation:navigation-common:2.0.0"
    testImplementation "com.google.truth:truth:0.44"

    androidTestImplementation "com.google.truth:truth:0.44"
    androidTestImplementation "androidx.test:core:1.2.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.ext:truth:1.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"
    androidTestUtil "androidx.test:orchestrator:1.2.0"

}

apply plugin: 'com.google.gms.google-services'
