/*
 * Copyright (c) 2019 Gabriel Dogaru - gdogaru@gmail.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

plugins {
    id 'com.android.application'

    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'

    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
    id 'androidx.navigation.safeargs.kotlin'

    id 'jacoco'

    id 'com.github.triplet.play'
}

android {
    compileSdkVersion build_versions.target_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        applicationId "com.gdogaru.codecamp"
        versionCode 1
        versionName "0.0.1"
        multiDexEnabled true

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(System.getenv('KEYSTORE') ?: '../certificate/dev-dummy.jks')
            storePassword System.getenv("KEYSTORE_PASSWORD") ?: "codecamp"
            keyAlias System.getenv("KEY_ALIAS") ?: "dummy"
            keyPassword System.getenv("KEY_PASSWORD") ?: "codecamp"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            debuggable true
            ext.alwaysUpdateBuildId = false
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "stage"
    productFlavors {
        dev {
            dimension "stage"
            signingConfig signingConfigs.release
//            minSdkVersion 24
            applicationIdSuffix '.dev'
            versionNameSuffix "-dev"

            resConfigs "en", "xxhdpi"

            resValue "string", "app_name", "Codecamp-DEV"
        }
        prod {
            signingConfig signingConfigs.release
            dimension "stage"
            resValue "string", "app_name", "Codecamp"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude '.readme'
    }

    lintOptions {
        abortOnError false
        warning 'MissingPrefix'
        warning 'InvalidPackage'
        warning 'RestrictedApi'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    buildFeatures {
        dataBinding = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    androidExtensions {
        experimental = true
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.each { output ->
                output.versionCodeOverride = androidAppVersionCode
                output.versionNameOverride = androidAppVersionName
            }
        }
    }
}

jacoco {
    toolVersion = "0.7.4+"
}

play {
    track = 'beta' // or internal or alpha...
    serviceAccountCredentials = file(System.getenv('PRIVATE_KEY') ?: '../certificate/private-key.json')
    defaultToAppBundles = true // Use App Bundle instead of APK
//    resolutionStrategy = "ignore"
    //If the deployment fails due to an API error, don't fail the CI Build
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
        // increase the number of errors that javac will print
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "androidx.multidex:multidex"
    implementation "androidx.legacy:legacy-support-v4"
    implementation "androidx.appcompat:appcompat"
    implementation "androidx.cardview:cardview"
    implementation "androidx.recyclerview:recyclerview"
    implementation "androidx.annotation:annotation"
    implementation "androidx.constraintlayout:constraintlayout"
    implementation "androidx.core:core-ktx"
    implementation "androidx.fragment:fragment-ktx"
    implementation "androidx.navigation:navigation-fragment-ktx"
    implementation "androidx.lifecycle:lifecycle-extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx"
    implementation 'com.google.firebase:firebase-analytics'
    implementation "androidx.room:room-runtime"
    kapt "androidx.room:room-compiler"
    implementation "androidx.work:work-runtime-ktx"
    implementation "com.google.android.material:material"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"

    implementation "com.google.firebase:firebase-perf"
    implementation "com.google.firebase:firebase-core"
    implementation 'com.google.firebase:firebase-crashlytics'

    implementation "com.google.android.gms:play-services-maps"
    implementation "com.google.android.gms:play-services-base"
    implementation "com.google.android.gms:play-services-gcm"

    implementation "com.google.dagger:dagger"
    implementation "com.google.dagger:dagger-android"
    implementation "com.google.dagger:dagger-android-support"
    kapt "com.google.dagger:dagger-android-processor"
    kapt "com.google.dagger:dagger-compiler"

    implementation "com.jakewharton.timber:timber"

    implementation "com.squareup.okio:okio"
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"

    implementation 'com.jakewharton.threetenabp:threetenabp'

    implementation "com.github.bumptech.glide:glide"
    implementation "se.emilsjolander:stickylistheaders"

    //https://github.com/FasterXML/jackson-module-kotlin/issues/218 stay like this until api >=24
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'com.evernote:android-state'
    kapt 'com.evernote:android-state-processor'


    testImplementation "androidx.test.ext:junit"
    testImplementation "org.mockito:mockito-core"
    testImplementation "androidx.navigation:navigation-common"
    testImplementation "junit:junit"
    testImplementation "com.google.truth:truth"

    androidTestImplementation "com.google.truth:truth"
    androidTestImplementation "androidx.test:core"
    androidTestImplementation "androidx.test.ext:junit"
    androidTestImplementation "androidx.test.ext:truth"
    androidTestImplementation "androidx.test:rules"
    androidTestImplementation "androidx.test:runner"
    androidTestImplementation "androidx.test:rules"
    androidTestUtil "androidx.test:orchestrator"

}

apply plugin: 'com.google.gms.google-services'
